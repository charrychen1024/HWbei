{
    "collab_server" : "",
    "contents" : "#读取数据\ngenotypeNumber <- read.table('genotypeNumber.dat',header = T)\nkind <- rep(0:1,each = 500)\ngenotypeNumber <- data.frame(kind,genotypeNumber)\ngenotypeNumber <- lapply(genotypeNumber, as.factor)\ngenotypeNumber <- as.data.frame(genotypeNumber)\n\nhead(genotypeNumber,n = 1)\nstr(genotypeNumber)\nsum(is.na(genotypeNumber))\n\nlibrary(randomForest)\nlibrary(e1071)\nlibrary(gmodels)\n\n# question2 ---------------------------------------------------------------\n\n\n#变量选择\ngenotypeNumber <- read.table('genotypeNumber.dat',header = T)\nill <- rep(0:1,each = 500)\ngenotypeNumber <- data.frame(ill,genotypeNumber)\ngenotypeNumber <- lapply(genotypeNumber, as.factor)\ngenotypeNumber <- as.data.frame(genotypeNumber)\n\npstd <- 0.05\npvalue <- 0\nvarsel <- NA\nfor (j in 2:9445) {\n  rs.crosstable <- CrossTable(genotypeNumber$ill,genotypeNumber[,j])\n  #rs1.crosstable$t\n  #chisq.res <- list()\n  for (i in 1:3) {\n    tempframe <- data.frame(v1 = c(rs.crosstable$t[1,i],rs.crosstable$t[2,i]), \n                            V2 = 500 - c(rs.crosstable$t[1,i],rs.crosstable$t[2,i]))\n    chisq.res <- chisq.test(tempframe)\n    pvalue[i] <- chisq.res$p.value\n    # print(chisq.test(tempframe))\n  }\n  if(pvalue[1] <= pstd | pvalue[2] <= pstd | pvalue[3] <= pstd)\n    varsel[j] <- 1\n  else\n    varsel[j] <- 0\n}\n\n#选择显著性位点\nwrite.table(colnames(genotypeNumber)[which(varsel == 1)],file = './doc/firstselection.txt') \n\n#随机森林\nset.seed(1)\ngenotypeNumber.fsel <- genotypeNumber[,c(1,which(varsel == 1))]\nmodel <- randomForest(ill~.,data = genotypeNumber.fsel,importance = T,ntree = 600)\nimpor <- model$importance\nMDG <- data.frame(rs = colnames(genotypeNumber.fsel)[2:871],MeanDecreaseGini = impor[,4])\nMDG$rs <- as.character(MDG$rs)\nlength(which(MDG[,2] >= 0.9))\norder(MDG[,2],decreasing = T)[1:13]\nwrite.csv(impor,file = './doc/MeanDecreaseGine3.csv')\n\n#位点MDG\ndev.new()\nplot(x = 1:nrow(MDG),y = MDG$MeanDecreaseGini,pch = 1,xaxt = 'n',xlab = '位点',ylab = 'MDG',main = '位点MeanDecreaseGini')\naxis(side = 1,at = 1:nrow(MDG))\nabline(h = 0.9,col = 'red',lwd = 2)\n#text(x = which.max(MDG[,2]) + 1,y = MDG['rs2273298',2]-0.1,labels = 'rs2273298' )\ntext(x = c(order(MDG[,2],decreasing = T)[1:13]),y = c(MDG[order(MDG[,2],decreasing = T)[1:13],2]-0.05),\n     labels = c(MDG[order(MDG[,2],decreasing = T)[1:13],1]))\npoints(x = c(order(MDG[,2],decreasing = T)[1:13]), y = c(MDG[order(MDG[,2],decreasing = T)[1:13],2]),col = 'red')\n\n#选取前13个位点\ngenotypeNumber.ssel <- genotypeNumber.fsel[,c(1,order(MDG[,2],decreasing = T)[1:13]+1)]\n\n#SVM验证\nset.seed(1)\ntemp1 <- sample(1:500,350)\ntemp2 <- sample(501:1000,350)\ngenotypeNumber.ssel.train <- genotypeNumber.ssel[c(temp1,temp2),]\ngenotypeNumber.ssel.test <- genotypeNumber.ssel[-c(temp1,temp2),]\n\nmodel <- svm(ill~.,data = genotypeNumber.ssel.train)\n#str(model)\nmodelpred <- predict(model,genotypeNumber.ssel.test)\nmodel.err <- sum(modelpred != genotypeNumber.ssel.test$ill)/nrow(genotypeNumber.ssel.test)\n\n#SVM参数优化\nset.seed(1)\nbest.perf <- 0\nfor (i in 2:14) {\n  if(i != 10 & 1 != 13 & i != 3){\n    tune.res <- tune(svm,ill~.,data = genotypeNumber.ssel[,-c(i,10,13,3)],\n                 ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                               cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(tune.res)\nbest.perf[i] <- tune.res.summ$best.performance\n  }\n}\norder(best.perf)\nbest.perf\n\nset.seed(1)\ntune.res <- tune(svm,ill~.,data = genotypeNumber.ssel[,1:5],\n                 ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                               cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(tune.res)\n\ngenotypeNumber.tsel <- genotypeNumber.ssel[,-c(3,10,13)]\nwrite.table(colnames(genotypeNumber.tsel)[2:11],file = './doc/rstop10.txt')\n\n#卡方检验\nchisq.res <- 0\nfor (j in 2:11) {\n  rs.crosstable <- CrossTable(genotypeNumber.tsel$ill,genotypeNumber.tsel[,j])\n  chisq.res[j-1] <- chisq.test(rs.crosstable$t)$p.value\n}\nwhich(chisq.res > 0.01)\nwrite.table(colnames(genotypeNumber.tsel)[-8],file = './doc/rsname_2')\n\n#最终SVM模型\nset.seed(1)\ntune.res <- tune(svm,ill~.,data = genotypeNumber.tsel[,-8],\n                 ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                               cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(tune.res)\n\nset.seed(1)\ntemp1 <- sample(1:500,350)\ntemp2 <- sample(501:1000,350)\ntrain <- genotypeNumber.tsel[c(temp1,temp2),-8]\ntest <- genotypeNumber.tsel[-c(temp1,temp2),-8]\nmodel <- svm(ill~.,data = train,kernel = 'polynomial', cost = 10, probability = T)\npred <- predict(model,test,probability = T)\nerr <- sum(pred != test$ill)/nrow(test)\n#ROC曲线\nlibrary(ROCR)\nfitted <- attributes(pred)$probabilities[1:300,2]\nprediction <- prediction(predictions = fitted,test$ill)\nperf <- performance(prediction,measure = 'tpr',x.measure = 'fpr')\ndev.new()\nplot(perf,main = 'SVM模型ROC曲线', col ='red',lwd = 3)\nauc <- performance(prediction,measure = 'auc')@y.values\n\n\n# question4 ---------------------------------------------------------------\n\n\n#聚类\nmulti_phenos <- read.table('multi_phenos_new.txt')\nmulti_phenos <- as.data.frame(lapply(multi_phenos, as.factor))\nstr(multi_phenos)\n?hclust\n?dist\n#层次聚类\nset.seed(1)\nphenos.hclust <- hclust(d = dist(multi_phenos,method = 'euclidean'))\ndev.new()\nplot(phenos.hclust, hang = 0, labels = F,main = '相关性状层次聚类', xlab = '样本', ylab = '高度')\nabline( h = 3.05,col = 'red',lwd = 2)\n?hclust\nstr(phenos.hclust)\n#动态聚类\n?kmeans\nset.seed(1)\nphenos.kmeans <- kmeans(multi_phenos,centers = 6)\nstr(phenos.kmeans)\n\nphenos.kmeans$centers\n#保存聚类结果\nkind <- phenos.kmeans$cluster\ntable(kind)\n\nmultiphenos.rs <- genotypeNumber.fsel[,-1]\nmultiphenos.rs <- data.frame(kind,multiphenos.rs)\nmultiphenos.rs$kind <- as.factor(multiphenos.rs$kind)\n\n#随机森林\nset.seed(1)\nmodel <- randomForest(kind~.,data = multiphenos.rs,importance = T,ntree = 600)\nerr <- mean(model$err.rate)\nimpor <- model$importance\nMDG <- data.frame(rs = colnames(multiphenos.rs)[2:871],MeanDecreaseGini = impor[,8])\nMDG$rs <- as.character(MDG$rs)\nlength(which(MDG[,2] >= 1))\norder(MDG[,2],decreasing = T)[1:28]\nwrite.csv(impor,file = './doc/MeanDecreaseGine5.csv')\n\n#位点MDG\ndev.new()\nplot(x = 1:nrow(MDG),y = MDG$MeanDecreaseGini,pch = 1,xaxt = 'n',xlab = '位点',ylab = 'MDG',main = '位点MeanDecreaseGini')\naxis(side = 1,at = 1:nrow(MDG))\nabline(h = 1.2,col = 'red',lwd = 2)\n#text(x = which.max(MDG[,2]) + 1,y = MDG['rs2273298',2]-0.1,labels = 'rs2273298' )\ntext(x = c(order(MDG[,2],decreasing = T)[1:28]),y = c(MDG[order(MDG[,2],decreasing = T)[1:28],2]-0.05),\n     labels = c(MDG[order(MDG[,2],decreasing = T)[1:28],1]))\npoints(x = c(order(MDG[,2],decreasing = T)[1:28]), y = c(MDG[order(MDG[,2],decreasing = T)[1:28],2]),col = 'red')\n\n#选取前28个位点\nmultiphenos.rs.2 <- multiphenos.rs[,c(1,order(MDG[,2],decreasing = T)[1:28]+1)]\n\n\n#SVM变量选择\nset.seed(1)\ntune.res <- tune(svm,kind~.,data = multiphenos.rs.2,\n                 ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                               cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(tune.res)\n\n\nset.seed(1)\nbest.perf <- 0\nfbest.perf <- 0\nnamesdel <- 0\ntemp.data <- multiphenos.rs.2\nfor (j in 1:28) {\n  for (i in 1:(29-j)) {\n    tune.res <- tune(svm,kind~.,data = temp.data[,-(i+1)],\n                 ranges = list(kernel = c('sigmoid'),\n                               cost = c(5)))\n    #multiphenos.rs.2.temp <- multiphenos.rs.2\n    tune.res.summ <- summary(tune.res)\n    best.perf[i] <- tune.res.summ$best.performance\n}\nfbest.perf[j] <- min(best.perf)\nnumdel <- order(best.perf)[1]+1\nnamesdel[j] <- colnames(temp.data)[numdel]\ntemp.data <- temp.data[,-numdel]\n}\nfbest.perf\nnamesdel\n\nset.seed(1)\nmodel <- tune(svm,kind~.,data = multiphenos.rs.2[,1:25],\n                 ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                               cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(model)\n\n\n#卡方检验\nchisq.res <- 0\nfor (j in 2:29) {\n  rs.crosstable <- CrossTable(multiphenos.rs.2$kind,multiphenos.rs.2[,j])\n  chisq.res[j-1] <- chisq.test(rs.crosstable$t)$p.value\n}\nwhich(chisq.res > 0.03)\n\nset.seed(1)\nmodel <- tune(svm,kind~.,data = multiphenos.rs.2[,-c(which(chisq.res > 0.03)+1)],\n              ranges = list(kernel = c('radial','linear','sigmoid','polynomial'),\n                            cost = c(0.1,1,5,10)))\ntune.res.summ <- summary(model)\nmultiphenos.rs.3 <- multiphenos.rs.2[,-c(which(chisq.res > 0.03)+1)]\ncolnames(multiphenos.rs.3)[2:12]\n\nchisq.res <- 0\nfor (j in 2:12) {\n  rs.crosstable <- CrossTable(multiphenos.rs.3$kind,multiphenos.rs.3[,j])\n  chisq.res[j-1] <- chisq.test(rs.crosstable$t)$p.value\n}\nchisq.res\nwhich(chisq.res > 0.01)\nwrite.table(colnames(multiphenos.rs.3)[-c(1,which(chisq.res > 0.01))],file = './doc/rsname_4.txt')\n\n",
    "created" : 1474298191943.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "233660838",
    "id" : "450B74FA",
    "lastKnownWriteTime" : 1474299412,
    "last_content_update" : 1474299412499,
    "path" : "D:/School/ModelGame/Model/Issue2/script1.R",
    "project_path" : "script1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}